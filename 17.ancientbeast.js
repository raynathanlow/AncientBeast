(window.webpackJsonp=window.webpackJsonp||[]).push([[17],{319:function(e,t,a){"use strict";a.r(t);var r=a(0),i=a(112),n=a(26),d=a(42),c=a(10),s=a(2),u=a(113);t.default=function(e){e.abilities[6]=[{trigger:"onEndPhase",require:function(){return!!this.testRequirements()},activate:function(){this.end();for(var t=1;t<e.creatures.length;t++)if(e.creatures[t]instanceof s.a){var a=e.creatures[t];if(Object(n.b)(a,this.creature,n.a.enemy)&&!a.dead&&0===a.findEffect("Snow Storm").length){var r=new u.a("Snow Storm",this.creature,a,"onOtherCreatureDeath",{effectFn:function(t){var a=t.target;0==e.findCreature({type:"S7",dead:!1,team:[1-a.team%2,1-a.team%2+2]}).length&&this.deleteEffect()},alterations:this.effects[0],noLog:!0},e);a.addEffect(r)}}}},{trigger:"onQuery",distance:1,_targetTeam:n.a.enemy,require:function(){return!!this.testRequirements()&&!!this.testDirection({team:this._targetTeam,distance:this.distance,sourceCreature:this.creature})},query:function(){var t=this,a=this.creature;e.grid.queryDirection({fnOnConfirm:function(){t.animation.apply(t,arguments)},flipped:a.player.flipped,team:this._targetTeam,id:this.creature.id,requireCreature:!0,x:a.x,y:a.y,distance:this.distance,sourceCreature:a})},activate:function(t){this.end();var a=c.d(t).direction,n=c.d(t).creature,s=[];switch(a){case 0:s=e.grid.getHexMap(n.x,n.y-8,0,n.flipped,d.f).reverse();break;case 1:s=e.grid.getHexMap(n.x,n.y,0,n.flipped,d.q);break;case 2:s=e.grid.getHexMap(n.x,n.y,0,n.flipped,d.e);break;case 3:s=e.grid.getHexMap(n.x,n.y,-4,n.flipped,d.f);break;case 4:s=e.grid.getHexMap(n.x,n.y,0,!n.flipped,d.q);break;case 5:s=e.grid.getHexMap(n.x,n.y-8,-4,n.flipped,d.e).reverse()}var u=!1;s.length>1&&s[1].isWalkable(n.size,n.id,!0)&&(n.moveTo(s[1],{ignoreMovementPoint:!0,ignorePath:!0,callback:function(){e.activeCreature.queryMove()},animation:"push"}),u=!0);var g=r.extend({},this.damages);u||(g.crush=2*g.crush);var o=new i.a(this.creature,g,1,[],e);n.takeDamage(o)}},{trigger:"onQuery",_targetTeam:n.a.enemy,require:function(){if(!this.testRequirements())return!1;var t=d.q,a=d.d,r=this.creature,i=c.b(e.grid.getHexMap(r.x+2,r.y-2,0,!1,t),!0,!0,r.id,r.team).concat(c.b(e.grid.getHexMap(r.x+1,r.y-2,0,!1,a),!0,!0,r.id,r.team),c.b(e.grid.getHexMap(r.x,r.y,0,!1,t),!0,!0,r.id,r.team),c.b(e.grid.getHexMap(r.x+1,r.y,0,!1,a),!0,!0,r.id,r.team),c.b(e.grid.getHexMap(r.x+2,r.y+2,0,!1,t),!0,!0,r.id,r.team),c.b(e.grid.getHexMap(r.x-2,r.y-2,2,!0,t),!0,!0,r.id,r.team),c.b(e.grid.getHexMap(r.x-1,r.y-2,2,!0,a),!0,!0,r.id,r.team),c.b(e.grid.getHexMap(r.x,r.y,2,!0,t),!0,!0,r.id,r.team),c.b(e.grid.getHexMap(r.x-1,r.y,2,!0,a),!0,!0,r.id,r.team),c.b(e.grid.getHexMap(r.x-2,r.y+2,2,!0,t),!0,!0,r.id,r.team));return!!this.atLeastOneTarget(i,{team:this._targetTeam})},query:function(){var t=this,a=this.creature,r=[c.b(e.grid.getHexMap(a.x+2,a.y-2,0,!1,d.q),!0,!0,a.id,a.team).concat(c.b(e.grid.getHexMap(a.x+1,a.y-2,0,!1,d.d),!0,!0,a.id,a.team),c.b(e.grid.getHexMap(a.x,a.y,0,!1,d.q),!0,!0,a.id,a.team),c.b(e.grid.getHexMap(a.x+1,a.y,0,!1,d.d),!0,!0,a.id,a.team),c.b(e.grid.getHexMap(a.x+2,a.y+2,0,!1,d.q),!0,!0,a.id,a.team)),c.b(e.grid.getHexMap(a.x-2,a.y-2,2,!0,d.q),!0,!0,a.id,a.team).concat(c.b(e.grid.getHexMap(a.x-1,a.y-2,2,!0,d.d),!0,!0,a.id,a.team),c.b(e.grid.getHexMap(a.x,a.y,2,!0,d.q),!0,!0,a.id,a.team),c.b(e.grid.getHexMap(a.x-1,a.y,2,!0,d.d),!0,!0,a.id,a.team),c.b(e.grid.getHexMap(a.x-2,a.y+2,2,!0,d.q),!0,!0,a.id,a.team))];e.grid.queryChoice({fnOnConfirm:function(){t.animation.apply(t,arguments)},team:this._targetTeam,requireCreature:1,id:a.id,flipped:a.flipped,choices:r})},activate:function(t){for(var a=[],r=0;r<t.length;r++)t[r].creature instanceof s.a&&-1==a.indexOf(t[r].creature)&&(t[r].creature.takeDamage(new i.a(this.creature,this.damages1,1,[],e)),a.push(t[r].creature))}},{trigger:"onQuery",directions:[0,1,0,0,1,0],_targetTeam:n.a.enemy,require:function(){return!!this.testRequirements()&&!!this.testDirection({team:this._targetTeam,directions:this.directions,sourceCreature:this.creature})},query:function(){var t=this,a=this.creature;e.grid.queryDirection({fnOnSelect:function(a){var r=c.d(a).creature,i=t.creature.player.flipped?e.grid.hexes[c.d(a).y][c.d(a).x+r.size-1]:c.d(a);i.adjacentHex(t.radius).concat([i]).forEach((function(t){t.creature instanceof s.a?t.overlayVisualState("creature selected player"+t.creature.team):t.overlayVisualState("creature selected player"+e.activeCreature.team)}))},fnOnConfirm:function(){t.animation.apply(t,arguments)},flipped:a.player.flipped,team:this._targetTeam,id:this.creature.id,requireCreature:!0,x:a.x,y:a.y,sourceCreature:a})},activate:function(t){this.end();var a=c.d(t).creature,r=this.creature.player.flipped?e.grid.hexes[c.d(t).y][c.d(t).x+a.size-1]:c.d(t),i=this.getTargets(r.adjacentHex(this.radius).concat([r])),n=new u.a("Frozen",this.creature,void 0,"",{effectFn:function(e){e.target.stats.frozen=!0,this.deleteEffect()}},e);this.areaDamage(this.creature,this.damages,[n],i)}}]}}}]);